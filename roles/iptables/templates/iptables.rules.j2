*nat
{% for iface in firewall.interfaces.outside %}
-A POSTROUTING -o {{ iface }} -j SNAT --to {{ firewall.nat_ip }} 
{% endfor %}
{% for rule in firewall.nat_rules | default([]) %}
-A POSTROUTING {{ rule }}
{% endfor %}
COMMIT

*mangle
-A POSTROUTING -p tcp --tcp-flags SYN,RST SYN -o tun+ -j TCPMSS --set-mss 1360
-A POSTROUTING -p tcp --tcp-flags SYN,RST SYN -o gre+ -j TCPMSS --set-mss 1360
-A POSTROUTING -p tcp --tcp-flags SYN,RST SYN -o wg+ -j TCPMSS --set-mss 1360
{% if pppoe | default(false) %}
-A POSTROUTING -p tcp --tcp-flags SYN,RST SYN -o ppp+ -j TCPMSS --set-mss 1452
{% endif %}
{% if nat64 is defined %}
-A PREROUTING -d {{ firewall.nat_ip }} -p tcp --dport 61001:65535 -j JOOL --instance "nat64"
-A PREROUTING -d {{ firewall.nat_ip }} -p udp --dport 61001:65535 -j JOOL --instance "nat64"
-A PREROUTING -d {{ firewall.nat_ip }} -p icmp -j JOOL --instance "nat64"
{% endif %}
COMMIT

*filter
:INPUT ACCEPT [0:0]
:FORWARD ACCEPT [0:0]
:OUTPUT ACCEPT [0:0]
:DROP_INPUT - [0:0]
:DROP_FORWARD - [0:0]
-A DROP_INPUT -m limit --limit 2/min -j LOG --log-prefix "iptables drop: CHAIN=INPUT " --log-level 4
-A DROP_INPUT -j DROP

-A INPUT -p icmp -j ACCEPT
{% if firewall.filters is defined and firewall.filters.ipv4 is defined %}
{% for filter in firewall.filters.ipv4.input | default([]) %}
-A INPUT {{ filter }}
{% endfor %}
{% endif %}
-A INPUT -p tcp -m tcp --dport 2222 -j ACCEPT
{% for iface in interfaces %}
{% if iface.type == 'Tunnel' and iface.tunnel.proto == 'GRE' %}
-A INPUT -s {{ iface.tunnel.remote_ip }} -p {{ iface.tunnel.proto }} -j ACCEPT
{% endif %}
{% endfor %}
{% for peer in peerings | default([]) %}
{% for session in peer.sessions | default([]) %}
{% if session.ip | ipv4() != False %}
-A INPUT -s {{ session.ip }}{% if session.interface is defined %} -i {{ session.interface }}{% endif %} -p tcp -m tcp --dport 179 -j ACCEPT
-A INPUT -s {{ session.ip }}{% if session.interface is defined %} -i {{ session.interface }}{% endif %} -p tcp -m tcp --sport 179 -j ACCEPT
{% endif %}
{% endfor %}
{% endfor %}
-A INPUT -m conntrack --ctstate INVALID -j DROP_INPUT
-A INPUT -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
-A INPUT -i lo -j ACCEPT
{% for iface in firewall.interfaces.inside | default([]) %}
-A INPUT -i {{ iface }} -j ACCEPT
{% endfor %}
-A INPUT -i wg+ -j ACCEPT
{% for interface in ospf.interfaces | default([]) %}
-A INPUT -i {{ interface.name | replace('*', '+') }} -p ospf -j ACCEPT
{% endfor %}
-A INPUT -p udp -m udp --dport 1194 -j ACCEPT
-A INPUT -p udp -m udp --dport 60001:60999 -j ACCEPT
{% for iface in wireguard.interfaces | default([]) %}
{% if iface.port is defined %}
-A INPUT -p udp -m udp --dport {{ iface.port }} -j ACCEPT
{% endif %}
{% endfor %}
-A INPUT -j DROP_INPUT

-A DROP_FORWARD -m limit --limit 2/min -j LOG --log-prefix "iptables drop: CHAIN=FORWARD " --log-level 4
-A DROP_FORWARD -j DROP

-A FORWARD -p udp --dport 137 -j DROP_FORWARD
-A FORWARD -p udp --dport 123 -j DROP_FORWARD
-A FORWARD -p udp --dport 80 -j DROP_FORWARD
-A FORWARD -p udp --dport 1900 -j DROP_FORWARD
-A FORWARD -p icmp -j ACCEPT
{% if firewall.filters is defined and firewall.filters.ipv4 is defined %}
{% for filter in firewall.filters.ipv4.forward | default([]) %}
-A FORWARD {{ filter }}
{% endfor %}
{% endif %}
-A FORWARD -i lo -j ACCEPT
{% for iface in firewall.interfaces.inside | default([]) %}
-A FORWARD -i {{ iface }} -j ACCEPT
{% endfor %}
-A FORWARD -i wg+ -j ACCEPT
-A FORWARD -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
-A FORWARD -j DROP_FORWARD
COMMIT
